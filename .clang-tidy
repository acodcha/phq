---
# Copyright Â© 2023 Alexandre Coderre-Chabot
#
# https://github.com/acodcha/clang-format-tidy
#
# This file is licensed under the MIT license (https://mit-license.org). Permission is hereby
# granted, free of charge, to any person obtaining a copy of this software and associated
# documentation files (the "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
# sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#   - The above copyright notice and this permission notice shall be included in all copies or
#     substantial portions of the Software.
#   - THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
#     BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
#     DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# This is a configuration file for use with LLVM's Clang-Tidy automatic source code linter
# (https://clang.llvm.org/extra/clang-tidy). To run the linter on your source code files, copy this
# file to the root directory of your source code repository, name it ".clang-tidy", and run:
#     clang-tidy --extra-arg=-std=c++20 /path/to/source/code/files
#
Checks: '
*,
abseil-*,
altera-*,
android-*,
boost-*,
bugprone-*,
-bugprone-easily-swappable-parameters,
cert-*,
-cert-dcl21-cpp,
-cert-err58-cpp,
clang-analyzer-*,
concurrency-*,
cppcoreguidelines-*,
-cppcoreguidelines-avoid-magic-numbers,
-cppcoreguidelines-non-private-member-variables-in-classes,
darwin-*,
fuchsia-*,
-fuchsia-default-arguments-calls,
-fuchsia-default-arguments-declarations,
-fuchsia-multiple-inheritance,
-fuchsia-overloaded-operator,
-fuchsia-trailing-return,
-fuchsia-virtual-inheritance,
google-*,
-google-objc-avoid-throwing-exception,
-google-objc-function-naming,
-google-objc-global-variable-declaration,
-google-readability-todo,
hicpp-*,
-hicpp-no-assembler,
linuxkernel-*,
llvm-*
-llvm-header-guard,
-llvm-include-order,
llvmlibc-*,
-llvmlibc-callee-namespace,
-llvmlibc-implementation-in-namespace,
-llvmlibc-inline-function-decl,
-llvmlibc-restrict-system-libc-headers,
misc-*,
-misc-non-private-member-variables-in-classes,
modernize-*,
-modernize-use-trailing-return-type,
mpi-*,
objc-*,
openmp-*,
performance-*,
-performance-avoid-endl,
portability-*,
-portability-restrict-system-includes,
readability-*,
-readability-function-cognitive-complexity,
-readability-identifier-length,
-readability-magic-numbers,
zircon-*,
-zircon-temporary-objects,
'
WarningsAsErrors: ''
HeaderFilterRegex: ''
AnalyzeTemporaryDtors: false
FormatStyle: none
User: ''
CheckOptions:
  - key: hicpp-signed-bitwise.IgnorePositiveIntegerLiterals
    value: 'true'
  - key: readability-redundant-member-init.IgnoreBaseInCopyConstructors
    value: 'true'
...
